{"componentChunkName":"component---node-modules-smooth-doc-src-templates-doc-js","path":"/docs/buildingABot/rulesAndTerms/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Design rules and terms","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Design rules and terms\",\n  \"section\": \"GETTING STARTED WITH CHATBOTS\",\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"rules-and-terms\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#rules-and-terms\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Rules and terms\"), mdx(\"h2\", {\n    \"id\": \"rules-and-tips\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#rules-and-tips\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Rules and tips\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Set low expectations\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"And be ready to deliver more then expected.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Don't pretend to be a human\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"It's better, when bot acts like bot - not pretends to be a human.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Always lead the dialog\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"There always should be \\\"call to action\\\" in your interaction. Never let user to think long about what to ask bot. You can use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"quick replies\"), \" as hints.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Keep conversation logic simple\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Simple things works. Not the AI or developers makes your bot smart.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Use your visual style\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"User experience will be much better when using media templates.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Time is your friend\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You can always \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"wait\"), \" with your answer.\"))), mdx(\"h2\", {\n    \"id\": \"terms\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#terms\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Terms\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Chat Event\"), \" - everything what user does\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"text message\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"menu click\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"handover\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sent media (image, location, video, ...)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"button click\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"quick reply click\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reaction\"), \" - everything, what bot says\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"text message\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"handover\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sent media (image, location, video, ...)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sent templates (carousel, lists, ...)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Interaction\"), \" - reaction to Chat Event\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Each interaction has theese settings:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"name - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"helps identifying interaction in analytics and it's referencing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fallback toggle - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"when enabled, all events will pass in\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AI samples - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"user message samples, which triggers the Interaction\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"contains a set of Reactions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Quick Reply\"), \" - suggested response text\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Quick replies allows user to reply without typing. Quick replies leads the coversation.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Intent\"), \" - the action recognised by AI\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"When user writes a text message, AI tries to recognise, what intent user has.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AI - the machine learning\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Tool, which recognises users intent from text. AI learns from AI samples\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Conversation Trees\"), \" - organised group of Interactions\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Interactions are evaulated in order, they appear in Conversation tree. Conversation trees can be embedded in other conversation trees.\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Beware of \\\"circular reverences\\\"\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#rules-and-terms","title":"Rules and terms","items":[{"url":"#rules-and-tips","title":"Rules and tips"},{"url":"#terms","title":"Terms"}]}]}}},"pageContext":{"id":"c3c9ff95-d83e-5eeb-83a9-b1166d99d2c4"}},"staticQueryHashes":["1122327541","1339625561","148928582","2140385554","3442269102","4275725850"]}